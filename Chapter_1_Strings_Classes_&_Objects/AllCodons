public class AllCodons {

    public int findStopCodon(String dnaStr, int startIndex, String stopCodon) {
        // Find stopCodon starting from (startIndex + 3), call currIndex
        int currIndex = dnaStr.indexOf(stopCodon, startIndex + 3);
        
        // As long as currIndex is not equal to -1
        while (currIndex != -1) {
            int diff = currIndex - startIndex;
            // Check if (currIndex - startIndex) is a multiple of 3
            if (diff % 3 == 0) {
                return currIndex;
            } else {
                // Update currIndex to the index of the next stopCodon starting from (currIndex + 1)
                currIndex = dnaStr.indexOf(stopCodon, currIndex + 1);
            }
        }
        // Return the length of dnaStr if no valid stopCodon is found
        return dnaStr.length();
    }

    public String findGene(String dna) {
        // Find first occurrence of "ATG", startIndex
        int startIndex = dna.indexOf("ATG");
        // If startIndex is -1, return ""
        if (startIndex == -1) {
            return "";
        }

        // Use taaIndex to store findStopCodon(dna, startIndex, "TAA")
        int taaIndex = findStopCodon(dna, startIndex, "TAA");
        // Use tagIndex to store findStopCodon(dna, startIndex, "TAG")
        int tagIndex = findStopCodon(dna, startIndex, "TAG");
        // Use tgaIndex to store findStopCodon(dna, startIndex, "TGA")
        int tgaIndex = findStopCodon(dna, startIndex, "TGA");

        // Find the minimum of taaIndex, tagIndex, and tgaIndex, call it minIndex
        int minIndex = Math.min(taaIndex, Math.min(tagIndex, tgaIndex));

        // If minIndex is the length of the DNA string, return ""
        if (minIndex == dna.length()) {
            return "";
        }
        // Return the substring from startIndex to minIndex + 3
        return dna.substring(startIndex, minIndex + 3);
    }

    public void testFindStop() {
        String dna = "xxxyyyzzzTAAxxxyyyzzzTAAxxx";
        int dex = findStopCodon(dna, 0, "TAA");
        if (dex != 9) System.out.println("error on 9");
        dex = findStopCodon(dna, 9, "TAA");
        if (dex != 21) System.out.println("error on 21");
        dex = findStopCodon(dna, 1, "TAA");
        if (dex != 26) System.out.println("error on 26");
        dex = findStopCodon(dna, 0, "TAG");
        if (dex != 26) System.out.println("error on 26 TAG");
        System.out.println("tests finished");
    }
}
